basePath: /api/v1
definitions:
  dto.CreateRequest:
    properties:
      repository:
        type: string
      tag:
        type: string
    type: object
  dto.CreateResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      repository:
        type: string
      tag:
        type: string
      updated_at:
        type: string
    type: object
  dto.DeleteResponse:
    type: object
  dto.ShowResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      repository:
        type: string
      tag:
        type: string
      updated_at:
        type: string
    type: object
  dto.UpdateRequest:
    properties:
      id:
        type: integer
      repository:
        type: string
      tag:
        type: string
    type: object
  dto.UpdateResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      repository:
        type: string
      tag:
        type: string
      updated_at:
        type: string
    type: object
  response.Response-any:
    properties:
      data: {}
      message:
        type: string
    type: object
  response.Response-dto_CreateResponse:
    properties:
      data:
        $ref: '#/definitions/dto.CreateResponse'
      message:
        type: string
    type: object
  response.Response-dto_DeleteResponse:
    properties:
      data:
        $ref: '#/definitions/dto.DeleteResponse'
      message:
        type: string
    type: object
  response.Response-dto_ShowResponse:
    properties:
      data:
        $ref: '#/definitions/dto.ShowResponse'
      message:
        type: string
    type: object
  response.Response-dto_UpdateResponse:
    properties:
      data:
        $ref: '#/definitions/dto.UpdateResponse'
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Docker image management API for MelhorzinCraft
  title: MelhorzinCraft API
  version: "1.0"
paths:
  /images:
    post:
      consumes:
      - application/json
      description: Creates a new Docker image with the specified tag and repository
      parameters:
      - description: Image data to create
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Image created successfully
          schema:
            $ref: '#/definitions/response.Response-dto_CreateResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response-any'
        "409":
          description: Image already exists
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response-any'
      summary: Create a new Docker image
      tags:
      - images
  /images/{id}:
    delete:
      description: Deletes a Docker image by ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Image deleted successfully
          schema:
            $ref: '#/definitions/response.Response-dto_DeleteResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/response.Response-any'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response-any'
      summary: Delete a Docker image
      tags:
      - images
    get:
      description: Gets a Docker image by ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Image found successfully
          schema:
            $ref: '#/definitions/response.Response-dto_ShowResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/response.Response-any'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response-any'
      summary: Get a Docker image
      tags:
      - images
    put:
      consumes:
      - application/json
      description: Updates a Docker image with the specified tag and/or repository
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      - description: Image data to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Image updated successfully
          schema:
            $ref: '#/definitions/response.Response-dto_UpdateResponse'
        "400":
          description: Invalid ID or bad request
          schema:
            $ref: '#/definitions/response.Response-any'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response-any'
      summary: Update an existing Docker image
      tags:
      - images
swagger: "2.0"
