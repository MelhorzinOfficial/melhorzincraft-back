{
    "swagger": "2.0",
    "info": {
        "description": "Docker image management API for MelhorzinCraft",
        "title": "MelhorzinCraft API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/docker/images": {
            "post": {
                "description": "Creates a new Docker image with the specified tag and repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Create a new Docker image",
                "parameters": [
                    {
                        "description": "Image data to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response-dto_CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "409": {
                        "description": "Image already exists",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    }
                }
            }
        },
        "/docker/images/{id}": {
            "get": {
                "description": "Gets a Docker image by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Get a Docker image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image found successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response-dto_ShowResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a Docker image with the specified tag and/or repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Update an existing Docker image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image data to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response-dto_UpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a Docker image by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Delete a Docker image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response-dto_DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateRequest": {
            "type": "object",
            "properties": {
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "dto.CreateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteResponse": {
            "type": "object"
        },
        "dto.ShowResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateRequest": {
            "type": "object",
            "properties": {
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.Response-any": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Response-dto_CreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.CreateResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Response-dto_DeleteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DeleteResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Response-dto_ShowResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ShowResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Response-dto_UpdateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.UpdateResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}